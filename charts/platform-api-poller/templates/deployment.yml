apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platformApiPoller.fullname" . }}
  labels: {{ include "platformApiPoller.labels.standard" . | nindent 4 }}
    service: platform-api-poller
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "platformApiPoller.name" . }}
      release: {{ .Release.Name }}
      service: platform-api-poller
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "platformApiPoller.name" . }}
        release: {{ .Release.Name }}
        service: platform-api-poller
      {{- if .Values.secrets }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yml") . | sha256sum }}
      {{- end }}
    spec:
      containers:
      - name: platform-api-poller
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        command: ["platform-api-poller"]
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: 8080
            name: tcp-web
            protocol: TCP
{{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
{{- end }}
        env:
        - name: NP_AUTH_URL
          value: {{ .Values.platform.authUrl | quote }}
        - name: NP_AUTH_PUBLIC_URL
          value: {{ .Values.platform.authUrl | quote }}
        - name: NP_AUTH_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_PLATFORM_API_URL
          value: {{ .Values.platform.apiUrl | quote }}
        - name: NP_PLATFORM_CONFIG_URI
          value: {{ .Values.platform.configUrl | quote }}
        - name: NP_PLATFORM_ADMIN_URI
          value: {{ .Values.platform.adminUrl | quote }}
        {{- if .Values.zipkin }}
        - name: NP_ZIPKIN_URL
          value: {{ .Values.zipkin.url }}
        - name: NP_ZIPKIN_APP_NAME
          value: {{ include "platformApiPoller.fullname" . }}
        - name: NP_ZIPKIN_SAMPLE_RATE
          value: {{ .Values.zipkin.sampleRate | default 0 | quote }}
        {{- end }}
        {{- if .Values.sentry }}
        - name: NP_SENTRY_DSN
          value: {{ .Values.sentry.dsn }}
        - name: NP_SENTRY_APP_NAME
          value: {{ include "platformApiPoller.fullname" . }}
        - name: NP_SENTRY_CLUSTER_NAME
          value: {{ .Values.sentry.clusterName }}
        - name: NP_SENTRY_SAMPLE_RATE
          value: {{ .Values.sentry.sampleRate | default 0 | quote }}
        {{- end }}
        - name: NP_CLUSTER_NAME
          value: {{ .Values.platform.clusterName }}
        - name: NP_KUBE_URL
          value: https://kubernetes.default.svc
        - name: NP_KUBE_AUTH_TYPE
          value: token
        - name: NP_KUBE_CA_DATA_PATH
          value: {{ include "platformApiPoller.kubeAuthMountRoot" . }}/ca.crt
        - name: NP_KUBE_TOKEN_PATH
          value: {{ include "platformApiPoller.kubeAuthMountRoot" . }}/token
        {{- if .Values.jobs.namespace }}
        - name: NP_KUBE_NAMESPACE
          value: {{ .Values.jobs.namespace | quote }}
        {{- end }}
        {{- if .Values.jobs.ingressClass }}
        - name: NP_KUBE_INGRESS_CLASS
          value: {{ .Values.jobs.ingressClass | quote }}
        {{- end }}
        {{- if .Values.jobs.ingressAuthMiddleware }}
        - name: NP_KUBE_INGRESS_AUTH_MIDDLEWARE
          value: {{ .Values.jobs.ingressAuthMiddleware | quote }}
        {{- end }}
        {{- if .Values.jobs.ingressErrorPageMiddleware }}
        - name: NP_KUBE_INGRESS_ERROR_PAGE_MIDDLEWARE
          value: {{ .Values.jobs.ingressErrorPageMiddleware | quote }}
        {{- end }}
        {{- if .Values.jobs.tolerationKey }}
        - name: NP_KUBE_POD_JOB_TOLERATION_KEY
          value: {{ .Values.jobs.tolerationKey | quote }}
        {{- end }}
        {{- if .Values.jobs.preemptibleTolerationKey }}
        - name: NP_KUBE_POD_PREEMPTIBLE_TOLERATION_KEY
          value: {{ .Values.jobs.preemptibleTolerationKey | quote }}
        {{- end }}
        - name: NP_KUBE_POD_PRIORITY_CLASS_NAME
          value: {{ include "platformApiPoller.fullname" . }}-job
        {{- if .Values.nodeLabels.job }}
        - name: NP_KUBE_NODE_LABEL_JOB
          value: {{ .Values.nodeLabels.job | quote }}
        {{- end }}
        {{- if .Values.nodeLabels.gpu }}
        - name: NP_KUBE_NODE_LABEL_GPU
          value: {{ .Values.nodeLabels.gpu | quote }}
        {{- end }}
        {{- if .Values.nodeLabels.preemptible }}
        - name: NP_KUBE_NODE_LABEL_PREEMPTIBLE
          value: {{ .Values.nodeLabels.preemptible | quote }}
        {{- end }}
        {{- if .Values.nodeLabels.nodePool }}
        - name: NP_KUBE_NODE_LABEL_NODE_POOL
          value: {{ .Values.nodeLabels.nodePool | quote }}
        {{- end }}
        {{- if .Values.jobs.imagePullSecret }}
        - name: NP_KUBE_IMAGE_PULL_SECRET
          value: {{ .Values.jobs.imagePullSecret | quote }}
        {{- end }}
        - name: NP_REGISTRY_URL
          value: {{ .Values.platform.registryUrl | quote }}
        {{- if .Values.platform.registryEmail }}
        - name: NP_REGISTRY_EMAIL
          value: {{ .Values.platform.registryEmail | quote }}
        {{- end }}
        {{- range $index, $storage := .Values.storages }}
        - name: NP_STORAGE_TYPE_{{ $index }}
          value: {{ $storage.type | quote }}
        {{- if $storage.path }}
        - name: NP_STORAGE_PATH_{{ $index }}
          value: {{ $storage.path | quote }}
        {{- end }}
        {{- if eq $storage.type "pvc" }}
        - name: NP_STORAGE_PVC_NAME_{{ $index }}
          value: {{ $storage.claimName | quote }}
        {{- else if eq $storage.type "nfs" }}
        - name: NP_STORAGE_NFS_SERVER_{{ $index }}
          value: {{ $storage.server | quote }}
        - name: NP_STORAGE_NFS_EXPORT_PATH_{{ $index }}
          value: {{ $storage.exportPath | quote }}
        {{- else if eq $storage.type "host" }}
        - name: NP_STORAGE_HOST_MOUNT_PATH_{{ $index }}
          value: {{ $storage.hostPath | quote }}
        {{- end }}
        {{- end }}
        volumeMounts:
        - mountPath: {{ include "platformApiPoller.kubeAuthMountRoot" . }}
          name: kube-api-data
          readOnly: true
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      volumes:
      - name: kube-api-data
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
              - key: ca.crt
                path: ca.crt
