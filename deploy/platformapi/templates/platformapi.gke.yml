apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: platformapi
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformapi
    spec:
      containers:
      - name: platformapi
        image: {{ printf "%s" (pluck .Values.global.env .Values.IMAGE | first | default .Values.IMAGE._default) }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: 8080
            name: tcp-web
            protocol: TCP
        resources:
          requests:
            cpu: "{{ printf "%s" (pluck .Values.global.env .Values.NP_RESOURCES_CPU_REQUEST | first | default .Values.NP_RESOURCES_CPU_REQUEST._default) }}"
            memory: "{{ printf "%s" (pluck .Values.global.env .Values.NP_RESOURCES_MEMORY_REQUEST | first | default .Values.NP_RESOURCES_MEMORY_REQUEST._default) }}"
        env:
        - name: NP_K8S_API_URL
          value: http://localhost:8001
        - name: NP_K8S_AUTH_TYPE
          value: none
        - name: NP_STORAGE_TYPE
          value: nfs
        - name: NP_STORAGE_NFS_SERVER
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_STORAGE_NFS_SERVER | first | default .Values.NP_STORAGE_NFS_SERVER._default) }}"
        - name: NP_STORAGE_NFS_PATH
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_STORAGE_NFS_PATH | first | default .Values.NP_STORAGE_NFS_PATH._default) }}"
        - name: NP_STORAGE_HOST_MOUNT_PATH
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_STORAGE_NFS_PATH | first | default .Values.NP_STORAGE_NFS_PATH._default) }}"
        - name: NP_K8S_JOBS_INGRESS_HTTPS
          value: "true"
        - name: NP_K8S_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_K8S_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE | first | default .Values.NP_K8S_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE._default) }}"
        - name: NP_K8S_NAMED_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_K8S_NAMED_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE | first | default .Values.NP_K8S_NAMED_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE._default) }}"
        - name: NP_K8S_SSH_AUTH_INGRESS_DOMAIN_NAME
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_K8S_SSH_AUTH_INGRESS_DOMAIN_NAME | first | default .Values.NP_K8S_SSH_AUTH_INGRESS_DOMAIN_NAME._default) }}"
        - name: NP_DB_REDIS_URI
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_DB_REDIS_URI | first | default .Values.NP_DB_REDIS_URI._default) }}"
        - name: NP_AUTH_URL
          value: http://platformauthapi:8080
        - name: NP_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: platformservices-secret
              key: compute_token
        - name: NP_OAUTH_BASE_URL
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_OAUTH_BASE_URL | first | default .Values.NP_OAUTH_BASE_URL._default) }}"
        - name: NP_OAUTH_CLIENT_ID
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_OAUTH_CLIENT_ID | first | default .Values.NP_OAUTH_CLIENT_ID._default) }}"
        - name: NP_OAUTH_AUDIENCE
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_OAUTH_AUDIENCE | first | default .Values.NP_OAUTH_AUDIENCE._default) }}"
        - name: NP_OAUTH_SUCCESS_REDIRECT_URL
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_OAUTH_SUCCESS_REDIRECT_URL | first | default .Values.NP_OAUTH_SUCCESS_REDIRECT_URL._default) }}"
        - name: NP_OAUTH_HEADLESS_CALLBACK_URL
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_OAUTH_HEADLESS_CALLBACK_URL | first | default .Values.NP_OAUTH_HEADLESS_CALLBACK_URL._default) }}"
        - name: NP_REGISTRY_HOST
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_REGISTRY_HOST | first | default .Values.NP_REGISTRY_HOST._default) }}"
        - name: NP_REGISTRY_HTTPS
          value: "true"
        - name: NP_K8S_NODE_LABEL_GPU
          value: cloud.google.com/gke-accelerator
        - name: NP_GKE_GPU_MODELS
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_GKE_GPU_MODELS | first | default .Values.NP_GKE_GPU_MODELS._default) }}"
        - name: NP_K8S_NODE_LABEL_PREEMPTIBLE
          value: cloud.google.com/gke-preemptible
        - name: NP_API_URL
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_API_URL | first | default .Values.NP_API_URL._default) }}"
        - name: NP_ADMIN_URL
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_ADMIN_URL | first | default .Values.NP_ADMIN_URL._default) }}"
        - name: NP_JOBS_INGRESS_OAUTH_AUTHORIZE_URL
          value: "{{ printf "%s" (pluck .Values.global.env .Values.NP_JOBS_INGRESS_OAUTH_AUTHORIZE_URL | first | default .Values.NP_JOBS_INGRESS_OAUTH_AUTHORIZE_URL._default) }}"
        - name: NP_PLATFORM_CONFIG_URI
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_PLATFORM_CONFIG_URI | first | default .Values.NP_PLATFORM_CONFIG_URI._default) }}
        - name: NP_AUTH_PUBLIC_URL
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_AUTH_PUBLIC_URL | first | default .Values.NP_AUTH_PUBLIC_URL._default) }}
        - name: NP_NOTIFICATIONS_URL
          value: http://platformnotificationsapi:8080/
        - name: NP_NOTIFICATIONS_TOKEN
          valueFrom:
            secretKeyRef:
              name: platformservices-secret
              key: compute_token

        - name: NP_ENFORCER_PLATFORM_API_URL
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_ENFORCER_PLATFORM_API_URL | first | default .Values.NP_ENFORCER_PLATFORM_API_URL._default) }}
        - name: NP_ENFORCER_TOKEN
          valueFrom:
            secretKeyRef:
              name: platformservices-secret
              key: compute_token
        - name: NP_CORS_ORIGINS
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_CORS_ORIGINS | first | default .Values.NP_CORS_ORIGINS._default) }}
        - name: NP_API_ZIPKIN_URL
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_API_ZIPKIN_URL | first | default .Values.NP_API_ZIPKIN_URL._default) | quote }}
        - name: NP_API_ZIPKIN_SAMPLE_RATE
          value: {{ printf "%s" (pluck .Values.global.env .Values.NP_API_ZIPKIN_SAMPLE_RATE | first | default .Values.NP_API_ZIPKIN_SAMPLE_RATE._default) | quote }}

      - name: kubeproxy
        image: lachlanevenson/k8s-kubectl:v1.10.3
        args: [proxy]
---
apiVersion: v1
kind: Service
metadata:
  name: platformapi
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: tcp-web
  selector:
    service: platformapi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: platformapi-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefix
    external-dns.platform.neuromation.io: "true"
spec:
  rules:
  - host: {{ printf "%s" (pluck .Values.global.env .Values.INGRESS_HOST | first | default .Values.INGRESS_HOST._default) }}
    http:
      paths:
      - path: /secrets
        backend:
          serviceName: platformsecrets
          servicePort: 8080
      - path: /oauth
        backend:
          serviceName: platformingressauth
          servicePort: 8080
      - path: /api/v1/secrets
        backend:
          serviceName: platformsecrets
          servicePort: 8080
      - path: /api/v1/disk
        backend:
          serviceName: platformdiskapi
          servicePort: 8080
      - path: /api/docs/v1/disk
        backend:
          serviceName: platformdiskapi
          servicePort: 8080
      - path: /api/v1/storage
        backend:
          serviceName: platformstorageapi
          servicePort: 8080
      - path: /api/v1/blob
        backend:
          serviceName: platformobjectstorage
          servicePort: 8080
      - path: /api/v1/users
        backend:
          serviceName: platformauthapi
          servicePort: 8080
      - path: /api/v1
        backend:
          serviceName: platformapi
          servicePort: 8080
  - host: {{ printf "%s" (pluck .Values.global.env .Values.INGRESS_PLATFORM_MONITORING_DOMAIN_NAME | first | default .Values.INGRESS_PLATFORM_MONITORING_DOMAIN_NAME._default) }}
    http:
      paths:
      - path: /api/v1/jobs
        backend:
          serviceName: platformmonitoringapi
          servicePort: 8080
{{- if eq .Values.global.env "staging" }}
  - host: {{ printf "%s" (pluck .Values.global.env .Values.INGRESS_MAIN_SITE_HOST | first | default .Values.INGRESS_MAIN_SITE_HOST._default) }}
    http:
      paths:
      - path: /oauth
        backend:
          serviceName: platformingressauth
          servicePort: 8080
      - path: /api/v1/storage
        backend:
          serviceName: platformstorageapi
          servicePort: 8080
      - path: /api/v1/blob
        backend:
          serviceName: platformobjectstorage
          servicePort: 8080
      - path: /api/v1/users
        backend:
          serviceName: platformauthapi
          servicePort: 8080
      - path: /api/v1
        backend:
          serviceName: platformapi
          servicePort: 8080
{{- end }}
---
apiVersion: scheduling.k8s.io/v1beta1
kind: PriorityClass
metadata:
  name: platform-job
value: 1000000
globalDefault: false
