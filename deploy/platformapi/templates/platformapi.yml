apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformapi
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      service: platformapi
  {{- if .Values.strategy }}
  strategy: {{ toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        service: platformapi
      {{- if .Values.secrets }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yml") . | sha256sum }}
      {{- end }}
    spec:
      containers:
      - name: platformapi
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: 8080
            name: tcp-web
            protocol: TCP
{{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
{{- end }}
        env:
        - name: NP_AUTH_URL
          value: http://platformauthapi:8080
        - name: NP_AUTH_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_OAUTH_AUTH_URL
          value: {{ .Values.NP_OAUTH_AUTH_URL | quote }}
        - name: NP_OAUTH_TOKEN_URL
          value: {{ .Values.NP_OAUTH_TOKEN_URL | quote }}
        - name: NP_OAUTH_LOGOUT_URL
          value: {{ .Values.NP_OAUTH_LOGOUT_URL | quote }}
        - name: NP_OAUTH_CLIENT_ID
          value: "{{ .Values.NP_OAUTH_CLIENT_ID }}"
        - name: NP_OAUTH_AUDIENCE
          value: "{{ .Values.NP_OAUTH_AUDIENCE }}"
        - name: NP_OAUTH_SUCCESS_REDIRECT_URL
          value: "{{ .Values.NP_OAUTH_SUCCESS_REDIRECT_URL }}"
        - name: NP_OAUTH_HEADLESS_CALLBACK_URL
          value: "{{ .Values.NP_OAUTH_HEADLESS_CALLBACK_URL }}"
        - name: NP_API_URL
          value: "{{ .Values.NP_API_URL }}"
        - name: NP_ADMIN_URL
          value: "{{ .Values.NP_ADMIN_URL }}"
        - name: NP_JOBS_INGRESS_OAUTH_AUTHORIZE_URL
          value: "{{ .Values.NP_JOBS_INGRESS_OAUTH_AUTHORIZE_URL }}"
        - name: NP_PLATFORM_CONFIG_URI
          value: {{ .Values.NP_PLATFORM_CONFIG_URI }}
        - name: NP_AUTH_PUBLIC_URL
          value: {{ .Values.NP_AUTH_PUBLIC_URL }}
        - name: NP_NOTIFICATIONS_URL
          value: http://platformnotificationsapi:8080/
        - name: NP_NOTIFICATIONS_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_ENFORCER_PLATFORM_API_URL
          value: {{ .Values.NP_ENFORCER_PLATFORM_API_URL }}
        - name: NP_ENFORCER_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_CORS_ORIGINS
          value: "{{ .Values.NP_CORS_ORIGINS }}"
        - name: NP_API_ZIPKIN_URL
          value: "{{ .Values.NP_API_ZIPKIN_URL }}"
        - name: NP_API_ZIPKIN_SAMPLE_RATE
          value: "{{ .Values.NP_API_ZIPKIN_SAMPLE_RATE }}"
        - name: NP_DB_POSTGRES_DSN
{{- if .Values.postgres.dsn }}
{{ toYaml .Values.postgres.dsn | indent 10 }}
{{- end }}
        {{- if .Values.NP_SENTRY_URL }}
        - name: NP_SENTRY_URL
          value: {{ .Values.NP_SENTRY_URL }}
        {{- end }}
        {{- if .Values.NP_SENTRY_CLUSTER }}
        - name: NP_SENTRY_CLUSTER
          value: {{ .Values.NP_SENTRY_CLUSTER }}
        {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: platformapi
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: tcp-web
  selector:
    service: platformapi
{{- if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: platformapi
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefix
{{- if .Values.ingress.extraAnnotations }}
{{ toYaml .Values.ingress.extraAnnotations | indent 4}}
{{- end }}
spec:
  rules:
{{- range .Values.ingress.hosts }}
  - host: {{ . | quote }}
    http:
      paths:
      - path: /api/v1
        backend:
          serviceName: platformapi
          servicePort: http
{{- end }}
{{- end }}
{{- if .Values.jobPriorityClass.enabled }}
---
apiVersion: scheduling.k8s.io/v1beta1
kind: PriorityClass
metadata:
  name: platform-job
value: 1000000
globalDefault: false
{{- end }}
