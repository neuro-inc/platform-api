apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformapi
spec:
  replicas: 1
  selector:
    matchLabels:
      service: platformapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformapi
      {{- if .Values.secret }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yml") . | sha256sum }}
      {{- end }}
    spec:
      containers:
      - name: platformapi
        image: {{ .Values.IMAGE }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: 8080
            name: tcp-web
            protocol: TCP
        resources:
          requests:
            cpu: "{{ .Values.NP_RESOURCES_CPU_REQUEST }}"
            memory: "{{ .Values.NP_RESOURCES_MEMORY_REQUEST }}"
        env:
        - name: NP_K8S_API_URL
          value: http://localhost:8001
        - name: NP_K8S_AUTH_TYPE
          value: none
        - name: NP_STORAGE_TYPE
          value: nfs
        - name: NP_STORAGE_NFS_SERVER
          value: "{{ .Values.NP_STORAGE_NFS_SERVER }}"
        - name: NP_STORAGE_NFS_PATH
          value: "{{ .Values.NP_STORAGE_NFS_PATH }}"
        - name: NP_STORAGE_HOST_MOUNT_PATH
          value: "{{ .Values.NP_STORAGE_NFS_PATH }}"
        - name: NP_K8S_JOBS_INGRESS_HTTPS
          value: "true"
        - name: NP_K8S_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE
          value: "{{ .Values.NP_K8S_JOBS_INGRESS_DOMAIN_NAME_TEMPLATE }}"
        - name: NP_DB_REDIS_URI
          value: "{{ .Values.NP_DB_REDIS_URI }}"
        - name: NP_AUTH_URL
          value: http://platformauthapi:8080
        - name: NP_AUTH_TOKEN
{{ toYaml .Values.NP_TOKEN | indent 10 }}
        - name: NP_OAUTH_BASE_URL
          value: "{{ .Values.NP_OAUTH_BASE_URL }}"
        - name: NP_OAUTH_CLIENT_ID
          value: "{{ .Values.NP_OAUTH_CLIENT_ID }}"
        - name: NP_OAUTH_AUDIENCE
          value: "{{ .Values.NP_OAUTH_AUDIENCE }}"
        - name: NP_OAUTH_SUCCESS_REDIRECT_URL
          value: "{{ .Values.NP_OAUTH_SUCCESS_REDIRECT_URL }}"
        - name: NP_OAUTH_HEADLESS_CALLBACK_URL
          value: "{{ .Values.NP_OAUTH_HEADLESS_CALLBACK_URL }}"
        - name: NP_REGISTRY_HOST
          value: "{{ .Values.NP_REGISTRY_HOST }}"
        - name: NP_REGISTRY_HTTPS
          value: "true"
        - name: NP_K8S_NODE_LABEL_GPU
          value: cloud.google.com/gke-accelerator
        - name: NP_GKE_GPU_MODELS
          value: "{{ .Values.NP_GKE_GPU_MODELS }}"
        - name: NP_K8S_NODE_LABEL_PREEMPTIBLE
          value: cloud.google.com/gke-preemptible
        - name: NP_API_URL
          value: "{{ .Values.NP_API_URL }}"
        - name: NP_ADMIN_URL
          value: "{{ .Values.NP_ADMIN_URL }}"
        - name: NP_JOBS_INGRESS_OAUTH_AUTHORIZE_URL
          value: "{{ .Values.NP_JOBS_INGRESS_OAUTH_AUTHORIZE_URL }}"
        - name: NP_PLATFORM_CONFIG_URI
          value: {{ .Values.NP_PLATFORM_CONFIG_URI }}
        - name: NP_AUTH_PUBLIC_URL
          value: {{ .Values.NP_AUTH_PUBLIC_URL }}
        - name: NP_NOTIFICATIONS_URL
          value: http://platformnotificationsapi:8080/
        - name: NP_NOTIFICATIONS_TOKEN
{{ toYaml .Values.NP_TOKEN | indent 10 }}
        - name: NP_ENFORCER_PLATFORM_API_URL
          value: {{ .Values.NP_ENFORCER_PLATFORM_API_URL }}
        - name: NP_ENFORCER_TOKEN
{{ toYaml .Values.NP_TOKEN | indent 10 }}
        - name: NP_CORS_ORIGINS
          value: "{{ .Values.NP_CORS_ORIGINS }}"
        - name: NP_API_ZIPKIN_URL
          value: "{{ .Values.NP_API_ZIPKIN_URL }}"
        - name: NP_API_ZIPKIN_SAMPLE_RATE
          value: "{{ .Values.NP_API_ZIPKIN_SAMPLE_RATE }}"
        - name: NP_DB_POSTGRES_DSN
{{ toYaml .Values.NP_DB_POSTGRES_DSN | indent 10 }}
        - name: NP_DB_POSTGRES_ENABLED
          value: "{{ .Values.NP_DB_POSTGRES_ENABLED }}"
        {{- if .Values.NP_SENTRY_URL }}
        - name: NP_SENTRY_URL
          value: {{ .Values.NP_SENTRY_URL }}
        {{- end }}
        {{- if .Values.NP_CLUSTER_NAME }}
        - name: NP_CLUSTER_NAME
          value: {{ .Values.NP_CLUSTER_NAME }}
        {{- end }}
      - name: kubeproxy
        image: lachlanevenson/k8s-kubectl:v1.10.3
        args: [proxy]
---
apiVersion: v1
kind: Service
metadata:
  name: platformapi
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: tcp-web
  selector:
    service: platformapi
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: platformapi
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule.type: PathPrefix
    external-dns.platform.neuromation.io: "true"
spec:
  rules:
{{- range .Values.INGRESS_HOSTS }}
  - host: {{ . | quote }}
    http:
      paths:
      - path: /api/v1
        backend:
          serviceName: platformapi
          servicePort: 8080
{{- end }}
{{- if eq .Values.ENV "dev" }}
---
apiVersion: scheduling.k8s.io/v1beta1
kind: PriorityClass
metadata:
  name: platform-job
value: 1000000
globalDefault: false
{{- end }}
