version: 2.0

defaults: &defaults
  machine:
    image: ubuntu-1604:201903-01
    docker_layer_caching: true
  working_directory: ~/platform-api
  environment:
    CLOUDSDK_PYTHON: /usr/bin/python2

jobs:

  gke_deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: GKE Auth
          command: |
            make -s gke_login

      - run:
          name: GKE Docker Push
          command: |
            make gke_docker_push

      - run:
          name: GKE K8s Deploy
          command: |
            make gke_k8s_deploy

  gke_ssh_auth_deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: GKE Auth
          command: |
            make -s gke_login

      - run:
          name: GKE Docker Push
          command: |
            make gke_docker_push

      - run:
          name: GKE K8s Deploy
          command: |
            make gke_k8s_deploy_ssh_auth


  test:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: Setting Up Python Virtual Environment
          command: |
            pyenv local 3.6.5
            python -m venv venv
            source venv/bin/activate
            pip install -U pip
            make setup

      - run:
          name: Running Static Code Analysis
          command: |
            source venv/bin/activate
            make lint

      - run:
          name: Make Unit Tests
          command: |
            source venv/bin/activate
            make test_unit
            codecov -F test_unit

      - run:
          name: Configuring Docker Client
          command: |
            # downgrade docker engine, https://github.com/docker/for-linux/issues/597
            sudo apt install docker-ce=18.06.3~ce~3-0~ubuntu
            make -s gke_login
            make gke_docker_pull_test

      - run:
          name: Installing NFS-related stuff
          command: |
            sudo apt-get install nfs-common
            sudo modprobe nfsd
            sudo modprobe nfs

      - run:
          name: Running Kubernetes
          command: |
            make start_k8s

      - run:
          name: Run Integration Tests
          command: |
            source venv/bin/activate
            make test_integration
            codecov -F integration

      - run:
          name: Running E2E Test Suite
          command: |
            source venv/bin/activate
            make test_k8s_platform_api_e2e
            codecov -F e2e

      - run:
          name: Stopping Kubernetes
          command: |
            make clean_k8s
          when: always


  artifactory_ssh_auth_deploy:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Artifactory ssh-auth Docker Push
          command: |
            make artifactory_ssh_auth_docker_push

      - run:
          name: Artifactory ssh-auth Helm Push
          command: |
            make artifactory_ssh_auth_helm_push



workflows:
  version: 2


  main:
    jobs:
      - test:
          context: org-global
          filters:
            branches:
              ignore:
                - master
                - /release.*/

  dev:
    jobs:
      - test:
          context: org-dev
          filters:
            branches:
              only:
                - master
      - gke_deploy:
          context: org-dev
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - gke_ssh_auth_deploy:
          context: org-dev
          requires:
            - test
          filters:
            branches:
              only:
                - master

  staging:
    jobs:
      - test:
          context: org-staging
          filters:
            branches:
              only:
                - /release.*/
      - gke_deploy:
          context: org-staging
          requires:
            - test
          filters:
            branches:
              only:
                - /release.*/
      - gke_ssh_auth_deploy:
          context: org-staging
          requires:
            - test
          filters:
            branches:
              only:
                - /release.*/

  prod:
    jobs:
      - test:
          context: org-prod
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /release.*/
      - gke_deploy:
          context: org-prod
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /release.*/
      - gke_ssh_auth_deploy:
          context: org-prod
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /release.*/

  artifactory:
    jobs:
      - test:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /artifactory.*/
      - artifactory_ssh_auth_deploy:
          context: org-global
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /artifactory.*/

