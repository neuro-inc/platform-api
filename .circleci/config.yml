defaults: &defaults
  machine:
    image: circleci/classic:201711-01
    docker_layer_caching: true
  working_directory: ~/.go_workspace/src/github.com/neuromation/platform-api

defaultspython: &defaultspython
  docker:
    - image: circleci/python:3.6.4-stretch
  working_directory: ~/platform-api


version: 2
jobs:

  test:
    <<: *defaults
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - run: |
          mkdir -p $TEST_RESULTS/junit
          go get github.com/jstemmer/go-junit-report
      - run:
          name: Running unit and integration tests
          command: |
            make up
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/junit/go-test-report.xml" EXIT
            make go_integration_test | tee ${TEST_RESULTS}/go-test.out;
            bash <(curl -s https://codecov.io/bash);
      - run:
          name: cleanup
          command: |
            make down
            make up
      - run:
          name: Running API tests
          command: make ci_run_api_tests

      - store_test_results:
          path: /tmp/test-results

  deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Building and pushing docker images
          command: |
            make build_api push_api

      - run:
          name: Deploying on dev environment
          command: |
              make deploy_platformapi_dev

  k8s:
    <<: *defaultspython
    steps:
      - checkout
      - run:
          name: Running Kubernetes
          command: |
            make start_k8s

#      - run:
#          name: Testing Kubernetes
#          command: |
#            make test_k8s
#
      - run:
          name: Install tox
          command: |
            pip install tox

      - run:
          name: Run tests
          command: |
            kubectl proxy --port=8000 &
            tox

      - run:
          name: Stopping Kubernetes
          command: |
            make clean_k8s
          when: always

  testpython:
    <<: *defaultspython
    steps:
      - run:
          name: Building and pushing docker images
          command: |
            python3.6


workflows:
  version: 2

  main:
    jobs:
      - testpython:
          context: org-global
      - k8s:
          context: org-global
#      - test:
#          context: org-global
#      - deploy:
#          context: org-global
#          requires:
#            - test
#          filters:
#            branches:
#              only:
#                - master
