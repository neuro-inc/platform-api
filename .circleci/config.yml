defaults: &defaults
  machine:
    image: circleci/classic:201711-01
    docker_layer_caching: true
  working_directory: ~/platform-api


version: 2
jobs:

  gke_deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: GKE Auth
          command: |
            make -s gke_login

      - run:
          name: GKE Docker Push
          command: |
            make gke_docker_push

      - run:
          name: GKE K8s Deploy
          command: |
            make gke_k8s_deploy

  gke_ssh_deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: GKE Auth
          command: |
            make -s gke_login

      - run:
          name: GKE Docker Push
          command: |
            make gke_docker_push

      - run:
          name: GKE K8s Deploy
          command: |
            make gke_k8s_deploy_ssh

  gke_ssh_auth_deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: GKE Auth
          command: |
            make -s gke_login

      - run:
          name: GKE Docker Push
          command: |
            make gke_docker_push

      - run:
          name: GKE K8s Deploy
          command: |
            make gke_k8s_deploy_ssh_auth

  gke_jumphost_deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: GKE Auth
          command: |
            make -C deploy/jumphost -s gke_login

      - run:
          name: GKE Docker Push
          command: |
            make -C deploy/jumphost gke_docker_jumphost_push

      - run:
          name: GKE K8s Deploy
          command: |
            make -C deploy/jumphost gke_k8s_deploy_jumphost


  test:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: Configuring Docker Client
          command: |
            make -s gke_login
            # docker-credential-gcloud still relies on Python 2.7,
            # thus we'd better pull testing images before we set up Python 3
            make gke_docker_pull_test

      - run:
          name: Installing Dependencies
          command: |
            pyenv install --debug 3.6.3
            pyenv local 3.6.3-debug
            sudo apt-get install -y software-properties-common
            sudo add-apt-repository -y ppa:0k53d-karl-f830m/openssl
            sudo apt-get update
            sudo apt-get install nfs-common
            export DEBIAN_FRONTEND="noninteractive"
            sudo apt-get install -y -q openssl

      - run:
          name: Running Kubernetes
          command: |
            # https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.10.md#before-upgrading
            #
            # MountPropagation feature is now beta. As a consequence, all
            # volume mounts in containers are now rslave on Linux by default.
            # To make this default work in all Linux environments the entire
            # mount tree should be marked as shareable, e.g. via mount
            # --make-rshared /. All Linux distributions that use systemd
            # already have the root directory mounted as rshared and hence
            # they need not do anything. In Linux environments without systemd
            # we recommend running mount --make-rshared / during boot before
            # docker is started.
            sudo mount --make-rshared /
            sudo mount --make-rshared /run
            sudo mount --make-rshared /var/lib/docker

            make start_k8s

# below rule cleans out hiredis, this is due to circle ci issue, to be resolved by moving to dockerized test execution
      - run:
          name: Setting Up Python Virtual Environment
          command: |
            python -m venv venv
            source venv/bin/activate
            pip install -U pip
            make setup
            pip uninstall -y hiredis

      - run:
          name: Running Static Code Analysis
          command: |
            source venv/bin/activate
            make lint

      - run:
          name: Run Platform Tests
          command: |
            source venv/bin/activate
            make test_k8s_platform_api

      - run:
          name: Running E2E Test Suite
          command: |
            source venv/bin/activate
            make test_k8s_platform_api_e2e

      - run:
          name: Stopping Kubernetes
          command: |
            make clean_k8s
          when: always


workflows:
  version: 2


  dev:
    jobs:
      - test:
          context: org-dev
      - gke_deploy:
          context: org-dev
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - gke_jumphost_deploy:
          context: org-dev
          filters:
            branches:
              only:
                - master
      - gke_ssh_deploy:
          context: org-dev
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - gke_ssh_auth_deploy:
          context: org-dev
          requires:
            - test
          filters:
            branches:
              only:
                - master

  staging:
    jobs:
      - test:
          context: org-staging
      - gke_deploy:
          context: org-staging
          requires:
            - test
          filters:
            branches:
              only:
                - /release.*/
      - gke_jumphost_deploy:
          context: org-staging
          filters:
            branches:
              only:
                - /release.*/
      - gke_ssh_auth_deploy:
          context: org-staging
          requires:
            - test
          filters:
            branches:
              only:
                - /release.*/

  prod:
    jobs:
      - test:
          context: org-prod
      - gke_deploy:
          context: org-prod
          requires:
            - test
          filters:
            branches:
              only:
                - /release.*/
      - gke_jumphost_deploy:
          context: org-prod
          filters:
            branches:
              only:
                - /release.*/
      - gke_ssh_auth_deploy:
          context: org-prod
          requires:
            - test
          filters:
            branches:
              only:
                - /release.*/
